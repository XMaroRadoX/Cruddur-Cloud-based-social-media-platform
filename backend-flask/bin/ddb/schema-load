#!/usr/bin/env python3

import sys
import boto3

attrs = {
    'endpoint_url': 'http://localhost:8000'
}
if len(sys.argv) == 2:
    if "prod" in sys.argv[1]:
        attrs = {
            'endpoint_url': ''
        }
ddb = boto3.client('dynambodb', **attrs)
table_name = 'cruddur-message'

response = ddb.create_table(
    TableName=table_name,
    AttributeDefinitions=[
        {
            'AttributeName': 'pk',
            'AttributeType': 'S'
        },  {
            'AttributeName': 'sk',
            'AttributeType': 'S'
        },
    ],

    KeySchema=[
        {
            'AttributeName': 'pk',
            'KeyType': 'HASH'
        },
        {
            'AttributeName': 'sk',
            'KeyType':  'RANGE'
        },
    ],
    LocalSecondaryIndexes=[
        {
            'IndexName': 'string',
            'KeySchema': [
                {
                    'AttributeName': 'string',
                    'KeyType': 'HASH' | 'RANGE'
                },
            ],
            'Projection': {
                'ProjectionType': 'ALL' | 'KEYS_ONLY' | 'INCLUDE',
                'NonKeyAttributes': [
                    'string',
                ]
            }
        },
    ],
    # GlobalSecondaryIndexes=[
    #     {
    #         'IndexName': 'string',
    #         'KeySchema': [
    #             {
    #                 'AttributeName': 'string',
    #                 'KeyType': 'HASH' | 'RANGE'
    #             },
    #         ],
    #         'Projection': {
    #             'ProjectionType': 'ALL' | 'KEYS_ONLY' | 'INCLUDE',
    #             'NonKeyAttributes': [
    #                 'string',
    #             ]
    #         },
    #         'ProvisionedThroughput': {
    #             'ReadCapacityUnits': 123,
    #             'WriteCapacityUnits': 123
    #         }
    #     },
    # ],
    BillingMode='PROVISIONED',
    ProvisionedThroughput={
        'ReadCapacityUnits': 5,
        'WriteCapacityUnits': 5
    },
    # StreamSpecification={
    #     'StreamEnabled': True | False,
    #     'StreamViewType': 'NEW_IMAGE' | 'OLD_IMAGE' | 'NEW_AND_OLD_IMAGES' | 'KEYS_ONLY'
    # },
    # SSESpecification={
    #     'Enabled': True | False,
    #     'SSEType': 'AES256' | 'KMS',
    #     'KMSMasterKeyId': 'string'
    # },
    # Tags=[
    #     {
    #         'Key': 'string',
    #         'Value': 'string'
    #     },
    # ],
    # TableClass='STANDARD' | 'STANDARD_INFREQUENT_ACCESS',
    # DeletionProtectionEnabled=True | False
)

print(respsonse)
